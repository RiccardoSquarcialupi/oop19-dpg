@startuml
title Grid Generator

interface GridInitializer {
    +makeGrid(GridType: gridType): Grid
    +getGrid(): Grid
    +getFirst(): Cell
    +getLast(): Cell
}

class GridInitializerImpl {
    +setJson(GridType: gridType) : void
}

class GridGenerator {
    +generate(): Pair<Grid, GridView>
}

interface View {
    +setView(): void
    +closeView(): void
}

interface GridView {
    +setCurrentPlayerName(String: name): void
    +setRemainingMoves(int: moves): void
    +showText(String: text): void
    +removeTest(): void
    +enableDirectionChoice(Set<Pair<Integer, Integer>>: cells): void
    +disableDirectionChoice(): void
    +enableDiceThrow(Dice: dice): void
    +disableDiceThrow(): void
    +updatePlayers(Map<Integer, Pair<Integer, Integer>: players): void
}

class GridViewImpl {
    +makeCellsList(Pair<Integer, Integer>: coordinates, GridType: type, Set<Pair<Integer, Integer>>: nextCells): void
    +startGeneration(): void
}

GridInitializer <|.. GridInitializerImpl
GridInitializerImpl --> GridGenerator
GridGenerator --> GridViewImpl
View <|-- GridView
GridView <|.. GridViewImpl
@enduml